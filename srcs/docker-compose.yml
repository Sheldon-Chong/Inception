networks:
  inception:
    name: inception
    driver: bridge

services:
  mariadb:
    container_name: mariadb
    build: requirements/mariadb
    image: mariadb:42
    env_file: ".env"
    
    # when mariadb wants to access /var/lib/mysql, it will actually point to ${HOME}/data/mariadb
    volumes:
      - mariadb:/var/lib/mysql
    networks: [ inception ]
    restart: always
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${ROOT_PASSWORD}" ]
      interval: 5s
      timeout: 5s
      retries: 5
  wordpress:
    container_name: wordpress
    build: requirements/wordpress
    image: wordpress:42
    env_file: ".env"
    networks: [ inception ]
    volumes:
      - wordpress:/var/www/html
    restart: always

    healthcheck:
      test: ["CMD-SHELL", "service php7.4-fpm status | grep running"]
      interval: 10s
      timeout: 5s
      retries: 5

    depends_on:
      mariadb:
        condition: service_healthy
  nginx:
    image: nginx:42
    build: requirements/nginx
    container_name: nginx
    networks: [ inception ]
    env_file: ".env"
    ports:
      - "443:443" # Only expose HTTPS
    volumes:
      - wordpress:/var/www/html
    depends_on:
      wordpress:
        condition: service_healthy
    restart: always

volumes:
  mariadb:
    driver_opts:
      type: none

      # tells Docker to bind mount a specific directory from your host into the container.
      o: bind
      device: ${HOME}/data/mariadb
  wordpress:
    driver_opts:
      type: none
      o: bind
      device: ${HOME}/data/wordpress
      
# Bind mounts allow you to mount an already-mounted file system to another location within the file system.